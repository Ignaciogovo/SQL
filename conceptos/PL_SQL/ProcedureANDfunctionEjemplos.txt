1-Añadir datos con un procedimiento

CREATE OR REPLACE PROCEDURE Nombre_procedimiento (a in int, b in int, c in int)
is
begin
INSERT INTO Nombre_tabla VALUES (a,b,c);
END;
/

		Ejemplo 	Crea un procedimiento que añada un nuevo DVD dado su codigo y su codigo de pelicula.
					CREATE OR REPLACE PROCEDURE añadir_dvd (a in int, b in int)
					is
					begin
					INSERT INTO dvd_pelicula VALUES (a,b,'Disponible');
					END;
					/
					SET SERVEROUTPUT ON
					DECLARE
					a int:=&IntroduzcaCodigoDVD;
					b int:=&IntroduceCodigoPelicula;
					BEGIN
					añadir_dvd(a,b);
					end;
					/



2-Modificar archivo con un procedimiento
CREATE OR REPLACE PROCEDURE Nombre_procedimiento (a in int, b in VARCHAR)
is
begin
UPDATE Nombre tabla SET  nombre_columna=b where condicion=a;
END;
/
		
		Ejemlo       Crea un procedimiento que cambie el estado del DVD dado su codigo y el nuevo estado.
			     		CREATE OR REPLACE PROCEDURE MODIFICAR_ESTADOdvd (a in int, b in VARCHAR)
			     		is
			     		Begin
					UPDATE dvd_pelicula SET  estado=b where codigo=a;
					END;
					/
					SET SERVEROUTPUT ON
					DECLARE
					a int:=&IntroduzcaCodigoDVD;
					b VARCHAR(20):=&IntroduceEstado;
					BEGIN
					MODIFICAR_ESTADOdvd(a,b);
					end;
					/

3-Devolver el numero de veces que esta un dato. Con funcion
CREATE OR REPLACE FUNCTION nombre_procedimiento (a in int) RETURN INT
is
b INT;
begin
SELECT COUNT(*) INTO b
FROM Nombre_Tabla
WHERE Si hay condicion;
RETURN(b);
END;
/

		Ejemplo	   Crea una funcion que devuelva cuantos DVD hay disponibles dado el codigo de la pelicula.
				CREATE OR REPLACE FUNCTION Cantidad_dvd (a in int) RETURN INT
				is
				b INT;
				begin
				SELECT COUNT(*) INTO b
				FROM DVD_PELICULA 
				WHERE codigo_pelicula=a and lower(estado)='disponible';
				RETURN(b);
				END;
				/
				SET SERVEROUTPUT ON
				DECLARE
				a int:=&IntroduzcaCodigoDVD;
				d int;
				BEGIN
				d:=cantidad_dvd(a);
				DBMS_OUTPUT.put_line(d);
				end;
				/		

4-Indicar 1 si es un dato especifico, 0 si no
CREATE OR REPLACE FUNCTION nombre_fuction (a in int) RETURN INT
is
b INT;
c int;
begin
SELECT COUNT(*) INTO b
FROM Nombre_tabla 
WHERE Condicion;
if b > 0 then
c:=1;
elsif b = 0 then
c:=0;
end if;
RETURN(c);
END;
/

		Ejmplo	 Crea una funcion que devuelva 1 si hay más de 0 DVD de una determinada pelicula y 0 si no lo hay. 1 punto.
				CREATE OR REPLACE FUNCTION disponibilidad_pelicula (a in int) RETURN INT
				is
				b INT;
				c int:=0;
				begin
				SELECT COUNT(*) INTO b
				FROM DVD_PELICULA 
				WHERE codigo_pelicula=a /*and lower(estado)='disponible'*/;
				if b > 0 then
				c:=1;
				end if;
				RETURN(c);
				END;
				/
				SET SERVEROUTPUT ON
				DECLARE
				a int:=&IntroduzcaCodigoPelicula;
				d int;
				BEGIN
				d:=disponibilidad_pelicula(a);
				DBMS_OUTPUT.put_line(d);
				end;
				/
     

Una funcion dentro de un procedimiento

CREATE OR REPLACE procedure Nombre_Procedimiento(a in int)
is
b int;
begin
b:=Nombre_funcion(a);
demas condiciones
end;
/

	Ejemplo		Crea un procedimiento que añada una devolución dado el codigo del cliente, el codigo del DVD y la fecha de la devolución. Comprueba que es posible.
				CREATE OR REPLACE procedure añadir_devolucion(a in int, c in int, d in date)
				is
				b int;
				begin
				b:=disponibilidad_disco(a);
				if b = 0 then
				INSERT INTO devolucion values (a,c,d);
				update dvd_pelicula set estado='disponible' where codigo=a;
				elsif b > 0 then
				dbms_output.put_line('No se puede');
				end if;
				end;
				/
				SET SERVEROUTPUT ON
				DECLARE
				a int:=&IntroduzcaCodigoDVD;
				c int:=&Codigo_cliente;
				d date:=&fecha_devolucion;
				BEGIN
				añadir_devolucion(a,c,d);
				end;
				/






OPCION CASE
Ejemplo

SET SERVEROUTPUT ON
DECLARE
nota int:=0;
res VARCHAR2(20);
BEGIN
nota:=&introduzca_nota;
CASE
WHEN (nota<5) THEN
	res:='suspenso';
	--El chico está suspenso                     
WHEN (nota<7) THEN
	res:='Bien'
	--Tiene un bien'
WHEN (nota<9) THEN
	res:='Notable';
WHEN (nota<=10) THEN
	res:='sobresaliente';
ELSE
	res:='No es valido';
END CASE;
dbms_output.put_line ('el chico tiene:'||res);
END;
/


Opción LOOP
SET SERVEROUTPUT ON
DECLARE
a INT:=0;
BEGIN 
LOOP
dbms_output.put_line(a);
a:=a+2;
IF a>10  THEN
dbms_output.put_line('Final');
EXIT;
END IF;
END LOOP;
END;
/


OPCION WHILE

SET SERVEROUTPUT ON
DECLARE
a INT:=0;
BEGIN 
WHILE a<=10 LOOP
dbms_output.put_line(a);

IF a=10  THEN
dbms_output.put_line('Final');
END IF;
a:=a+2;
END LOOP;
END;
/


OPCION FOR

SET SERVEROUTPUT ON
DECLARE
b INT;

BEGIN 
FOR i IN 0 .. 10 LOOP         --------> FOR i IN REVERSE 0.. 10 LOOP
b:=MOD(i,2);
IF b=0 THEN
dbms_output.put_line(i);
END IF;
IF i=10  THEN
dbms_output.put_line('Final');
END IF;
END LOOP;
END;
/