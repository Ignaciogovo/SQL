1Procedimiento para calcular gastos de envio:

CREATE OR ALTER PROCEDURE GastosEnvios @id_pedidos int
as
DECLARE @num1 as varchar(3)
DECLARE @num2 as varchar(2)
select @num1 = LEFT(Cod_postal,3) from Pedidos where Id= @id_pedidos
select @num2 = LEFT(Cod_Postal,2) from Pedidos where Id= @id_pedidos
if @num1 = '410'
begin
	update Pedidos set GastosEnvio=3.99 where Id=@id_pedidos
end
else
	begin
	if @num2 = '41'
		begin
				update Pedidos set GastosEnvio=5.99 where Id=@id_pedidos
		end
	else
		begin
				update Pedidos set GastosEnvio=9.99 where Id=@id_pedidos
		end
	end
GO





Crear trigger con el procedure

CREATE OR ALTER TRIGGER modificacion_pedido
ON pedidos
for update 
as
begin
	DECLARE @num as int
	SELECT @num = id from inserted
if update(cod_postal)
exec GastosEnvios @num 
end










CREATE TRIGGER actualizar total pedidos


CREATE OR ALTER TRIGGER modificacion_total
ON pedidos
for update
as
  DECLARE @num as int
  select @num =id from inserted
if UPDATE(subtotal)
begin
  update Pedidos set Total=SubTotal + GastosEnvio where Id=@num
end
if update(gastosenvio)
begin
  update Pedidos set Total=SubTotal + GastosEnvio where Id=@num
end



	Intención de modificar pedidos en linea y total pedidos


	El procedure
	
		CREATE OR ALTER procedure actualizar_total @num int
	as
	declare @num1 as decimal(10,2)
	set @num1 = (select sum(PedidosLinea.Cantidad*PedidosLinea.PrecioVentaUnitario) 
	FROM PedidosLinea
	where IdPedido = @num)
	update Pedidos set subTotal=@num1  where Id =@num
	go





CREATE OR ALTER TRIGGER actualizion_total
ON pedidoslinea
for update
as
begin
declare @var1 as int 
select @var1 = idpedido from inserted
if update(cantidad)
begin
exec actualizar_total @var1
end
if update(PrecioVentaUnitario)
exec actualizar_total @var1
end







INSERT



CREATE OR ALTER TRIGGER insertar_total
ON pedidoslinea
for insert
as
begin
declare @var1 as int 
select @var1 = idpedido from inserted
exec actualizar_total @var1
end

insert PedidosLinea values (1,2,4,1.34,4)



4 Añadir fecha de nacimiento y edad en la tabla clientes.
Procedimineto para calcular la edad para guardarlo.


		ALTER TABLE
	ALTER TABLE CLIENTES ADD fecha_nacimiento date;
	ALTER TABLE CLIENTES ADD edad int;

		INSERT


update clientes set fecha_nacimiento='12/19/2000' where Id=1;
update clientes set fecha_nacimiento='01/02/2000' where Id=2;
update clientes set fecha_nacimiento='05/31/2000' where Id=3;
update clientes set fecha_nacimiento='11/01/1982' where Id=4;
update clientes set fecha_nacimiento='12/08/1988' where Id=5;
update clientes set fecha_nacimiento='12/16/1982' where Id=6;
update clientes set fecha_nacimiento='12/03/1997' where Id=7;
update clientes set fecha_nacimiento='12/12/1980' where Id=8;




Procedimiento




	CREATE OR ALTER PROCEDURE calculoEdad  @id int
as
DECLARE @fecha datetime
select @fecha = fecha_nacimiento from clientes where id=@id
DECLARE @actual as datetime
set  @actual = getdate()
DECLARE @añoActual as int
set @añoActual = year(@actual)
DECLARE @mesactual as int
set @mesActual = month(@actual)
DECLARE @diaActual as int
SET @diaActual = day(@actual)
DECLARE @año as int
SET @año = year(@fecha)
DECLARE @mes as int
SET @mes = month(@fecha)
DECLARE @dia as int
SET @dia = day(@fecha)
Declare @edad as int

if (@mesactual > @mes)
begin
set @edad = @añoActual-@año
update Clientes set edad=@edad where id =@id
end
else
begin
	if( @mesactual = @mes)
	begin
		if (@diaActual > @dia)
		begin
			set @edad = @añoActual-@año
			update Clientes set edad=@edad where id =@id
		end
		else
		begin
			set @edad = @añoActual-(@año+1)
			update Clientes set edad=@edad where id =@id
		end
	end
	if (@mesactual < @mes)
	begin
		set @edad = @añoActual-(@año+1)
		update Clientes set edad=@edad where id =@id
	end
end



While para actuar procedure
DECLARE @num as int
set @num = 1 
while @num <9
begin
exec calculoEdad @num
set @num = @num +1
end


TRIGGER CALCULO EDAD
CREATE OR ALTER TRIGGER añadirEdad 
on clientes
for update, insert
as
declare @var as int;
select @var = id from inserted;
exec calculoEdad @var;
go




5 Trigger historico de precio por kg de los ingredientes
	creación tabla
	create table historicoPrecioKg (
	id int not null identity(1,1) PRIMARY KEY,
	idIngrediente int null,
	Nombre VARCHAR(100) null,
	PrecioKg decimal(18,2) null,
	fecha date null
	)


CREATE OR ALTER TRIGGER historicoPrecio
ON ingredientes
for update, insert
as
if UPDATE(preciokg)
insert into historicoprecioKG select id,Nombre,Preciokg, GETDATE() from inserted
go


